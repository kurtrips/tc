{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch12\stshfloch0\stshfhich0\stshfbi0\deflang16393\deflangfe16393{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Palatino};}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial{\*\falt Arial};}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New{\*\falt Courier New};}{\f12\froman\fcharset129\fprq2{\*\panose 02030600000101010101}Batang{\*\falt Arial Unicode MS};}
{\f36\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma{\*\falt Lucidasans};}{\f37\froman\fcharset129\fprq2{\*\panose 02030600000101010101}@Batang;}{\f206\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Palatino};}
{\f207\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Palatino};}{\f209\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Palatino};}{\f210\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Palatino};}
{\f211\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Palatino};}{\f212\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Palatino};}{\f213\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Palatino};}
{\f214\froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Palatino};}{\f216\fswiss\fcharset238\fprq2 Arial CE{\*\falt Arial};}{\f217\fswiss\fcharset204\fprq2 Arial Cyr{\*\falt Arial};}{\f219\fswiss\fcharset161\fprq2 Arial Greek{\*\falt Arial};}
{\f220\fswiss\fcharset162\fprq2 Arial Tur{\*\falt Arial};}{\f221\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew){\*\falt Arial};}{\f222\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic){\*\falt Arial};}
{\f223\fswiss\fcharset186\fprq2 Arial Baltic{\*\falt Arial};}{\f224\fswiss\fcharset163\fprq2 Arial (Vietnamese){\*\falt Arial};}{\f226\fmodern\fcharset238\fprq1 Courier New CE{\*\falt Courier New};}
{\f227\fmodern\fcharset204\fprq1 Courier New Cyr{\*\falt Courier New};}{\f229\fmodern\fcharset161\fprq1 Courier New Greek{\*\falt Courier New};}{\f230\fmodern\fcharset162\fprq1 Courier New Tur{\*\falt Courier New};}
{\f231\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew){\*\falt Courier New};}{\f232\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic){\*\falt Courier New};}{\f233\fmodern\fcharset186\fprq1 Courier New Baltic{\*\falt Courier New};}
{\f234\fmodern\fcharset163\fprq1 Courier New (Vietnamese){\*\falt Courier New};}{\f328\froman\fcharset0\fprq2 Batang Western{\*\falt Arial Unicode MS};}{\f326\froman\fcharset238\fprq2 Batang CE{\*\falt Arial Unicode MS};}
{\f327\froman\fcharset204\fprq2 Batang Cyr{\*\falt Arial Unicode MS};}{\f329\froman\fcharset161\fprq2 Batang Greek{\*\falt Arial Unicode MS};}{\f330\froman\fcharset162\fprq2 Batang Tur{\*\falt Arial Unicode MS};}
{\f333\froman\fcharset186\fprq2 Batang Baltic{\*\falt Arial Unicode MS};}{\f566\fswiss\fcharset238\fprq2 Tahoma CE{\*\falt Lucidasans};}{\f567\fswiss\fcharset204\fprq2 Tahoma Cyr{\*\falt Lucidasans};}
{\f569\fswiss\fcharset161\fprq2 Tahoma Greek{\*\falt Lucidasans};}{\f570\fswiss\fcharset162\fprq2 Tahoma Tur{\*\falt Lucidasans};}{\f571\fbidi \fswiss\fcharset177\fprq2 Tahoma (Hebrew){\*\falt Lucidasans};}
{\f572\fbidi \fswiss\fcharset178\fprq2 Tahoma (Arabic){\*\falt Lucidasans};}{\f573\fswiss\fcharset186\fprq2 Tahoma Baltic{\*\falt Lucidasans};}{\f574\fswiss\fcharset163\fprq2 Tahoma (Vietnamese){\*\falt Lucidasans};}
{\f575\fswiss\fcharset222\fprq2 Tahoma (Thai){\*\falt Lucidasans};}{\f578\froman\fcharset0\fprq2 @Batang Western;}{\f576\froman\fcharset238\fprq2 @Batang CE;}{\f577\froman\fcharset204\fprq2 @Batang Cyr;}{\f579\froman\fcharset161\fprq2 @Batang Greek;}
{\f580\froman\fcharset162\fprq2 @Batang Tur;}{\f583\froman\fcharset186\fprq2 @Batang Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1042\loch\f0\hich\af0\dbch\af12\cgrid\langnp1033\langfenp1042 \snext0 Normal;}{\*\cs10 \additive 
\ssemihidden Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\loch\f0\hich\af0\dbch\af12\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{
\s15\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs16\alang1025 \ltrch\fcs0 \fs16\lang1033\langfe1042\loch\f36\hich\af36\dbch\af12\cgrid\langnp1033\langfenp1042 
\sbasedon0 \snext15 \ssemihidden \styrsid14186427 Balloon Text;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\revtbl {Unknown;}}{\*\rsidtbl \rsid3150652\rsid3475228\rsid6181742\rsid6322346\rsid7623575\rsid9044204\rsid10779161\rsid14028598\rsid14186427}{\*\generator Micro
soft Word 11.0.0000;}{\info{\title General Protocol Buffers/API Background}{\operator Aiman}{\creatim\yr2009\mo5\dy29\hr20\min52}{\revtim\yr2009\mo6\dy15\hr2\min38}{\version4}{\edmins1585}{\nofpages14}{\nofwords4047}{\nofchars23070}{\nofcharsws27063}
{\vern24615}{\*\password 00000000}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}{\xmlns2 urn:schemas-microsoft-com:office:smarttags}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\donotembedsysfont0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale100\rsidroot14186427 \fet0{\*\wgrffmtfilter 013f}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid3150652 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1042\loch\af0\hich\af0\dbch\af12\cgrid\langnp1033\langfenp1042 {
\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid3150652 \hich\af1\dbch\af12\loch\f1 General Protocol Buffers/API Background}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652 
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid3150652 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid3150652\charrsid14186427 \hich\af1\dbch\af12\loch\f1 NOTE: }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid3150652\charrsid14186427 \hich\af1\dbch\af12\loch\f1 You should first become familiar with Protocol Buffers (http://code.google.com/p/protobuf/) and how it is used in the app\hich\af1\dbch\af12\loch\f1 
lication as described by the system architecture. That will help you with the rest of this description of the SP-14 Panel API.
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid3150652 {\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid3150652\charrsid10779161 \hich\af1\dbch\af12\loch\f1 Items Included
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652\charrsid14186427 
\par \hich\af1\dbch\af12\loch\f1 Attached are two .proto files:
\par \hich\af1\dbch\af12\loch\f1 1. sp14host.proto
\par \hich\af1\dbch\af12\loch\f1 2. sp14basetypes.proto}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652 
\par 
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid3150652\charrsid10779161 \hich\af1\dbch\af12\loch\f1 Description of API
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652\charrsid14186427 
\par \hich\af1\dbch\af12\loch\f1 The first (sp14host.proto) is the "top level" file that contains all the services and derived messages.  This file is auto-generated.
\par \hich\af1\dbch\af12\loch\f1 The second (sp14basetypes.proto) is a SP-14 core data types (code running on the actual panel) converted to protocol buffe\hich\af1\dbch\af12\loch\f1 rs messages.
\par 
\par \hich\af1\dbch\af12\loch\f1 The basic idea of the API is to make CRUD (Create, Read, Update, Delete) calls for every table in the SP14 database that resides on the panel.  Each call is of the form:
\par 
\par \hich\af1\dbch\af12\loch\f1     rpc dabasecall ( tDerivedArgumentType ) returns ( tDerivedReturnTyp\hich\af1\dbch\af12\loch\f1 e );
\par 
\par \hich\af1\dbch\af12\loch\f1 For example, if we're looking at the tSystem part of the database, the "update" call would be:
\par 
\par 
\par \hich\af1\dbch\af12\loch\f1     rpc updatetSystem( tSystemArgument ) returns (tSystemReturn);
\par 
\par 
\par \hich\af1\dbch\af12\loch\f1 Where the tSystemArgument and tSystemReturn types are essentially wrappers for a tSys\hich\af1\dbch\af12\loch\f1 tem structure:
\par 
\par \hich\af1\dbch\af12\loch\f1 message tSystemArgument
\par \{
\par \hich\af1\dbch\af12\loch\f1     required uint32 numberOfReturns = 1;
\par \hich\af1\dbch\af12\loch\f1     repeated tSystem data = 2;
\par \hich\af1\dbch\af12\loch\f1     optional uint32 ID = 3;
\par \}
\par 
\par \hich\af1\dbch\af12\loch\f1 message tSystemReturn
\par \{
\par \hich\af1\dbch\af12\loch\f1     required tagDatabaseReturnStatus status = 1 [default = eStatusNotImplemented];
\par \hich\af1\dbch\af12\loch\f1     repeated tSystem data = 2;
\par \hich\af1\dbch\af12\loch\f1     repeated uint32 ID = 3;
\par \}
\par 
\par \hich\af1\dbch\af12\loch\f1 For the tSystemArgument: if we just want to update one, we set numberOfReturns = 1.  If we want specific fields to be updated, we fill in the appropriate parts of the data field.  If we know the\hich\af1\dbch\af12\loch\f1 
 internal ID object to be updated, we set the ID field.
\par 
\par \hich\af1\dbch\af12\loch\f1 For the tSystemReturn: the first field indicates general success or failure.  The second fields is the filled-in structures for the tSystem returned by the call (in the case of }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid3150652 \hich\af1\dbch\af12\loch\f1 read}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652\charrsid14186427 \hich\af1\dbch\af12\loch\f1 , it could return \hich\af1\dbch\af12\loch\f1 
the complete structure).  The third field returns the ID of the object updated.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652 
\par 
\par \hich\af1\dbch\af12\loch\f1 The returns for the second field are:
\par 
\par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0\pararsid3150652 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652 \hich\af1\dbch\af12\loch\f1 Create : data is not set.
\par \hich\af1\dbch\af12\loch\f1 Read: data is set if there is a valid return.
\par \hich\af1\dbch\af12\loch\f1 Update: data is not set.
\par \hich\af1\dbch\af12\loch\f1 Delete: data is not set.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652\charrsid14186427 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid3150652 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652\charrsid14186427 
\par \hich\af1\dbch\af12\loch\f1 The auto-gene\hich\af1\dbch\af12\loch\f1 rated file contains all CR}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652 \hich\af1\dbch\af12\loch\f1 UD methods for database types.
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid3150652 {\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid3150652 \hich\af1\dbch\af12\loch\f1 1. General}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3150652 

\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid3150652 
\par \hich\af1\dbch\af12\loch\f1 1.1}{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid3475228 \hich\af1\dbch\af12\loch\f1 . Schedule and window mappings}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par \hich\af1\dbch\af12\loch\f1 In general, there will be a field in a message that is a "schedule" ID
\par 
\par \hich\af1\dbch\af12\loch\f1 message }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 tSchedule}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \{
\par \hich\af1\dbch\af12\loch\f1     repeated tWindow Window             = 1; 
\par \hich\af1\dbch\af12\loch\f1     repeated uint32 HolidaySchedule     = 2; 
\par \hich\af1\dbch\af12\loch\f1     optional uint32 Defined             = 3;
\par \hich\af1\dbch\af12\loch\f1     optional uint32 MidnightHolidayMode = 4;
\par \hich\af1\dbch\af12\loch\f1     optional uint32 ID                  = 5; 
\par \}
\par 
\par \hich\af1\dbch\af12\loch\f1 We also will have a "window" field that will hold the index of the fiel\hich\af1\dbch\af12\loch\f1 d.
\par 
\par \hich\af1\dbch\af12\loch\f1 message }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 tWindow}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \{
\par \hich\af1\dbch\af12\loch\f1     optional uint32 Open       = 1;           
\par \hich\af1\dbch\af12\loch\f1     optional uint32 Close      = 2;          
\par \hich\af1\dbch\af12\loch\f1     optional uint32 WeekdayMap = 3;
\par \}
\par 
\par \hich\af1\dbch\af12\loch\f1 where Open and Close are times in minutes from 00:00:00 and WeekdayMap indicates which days of the wee\hich\af1\dbch\af12\loch\f1 k it applies to.
\par 
\par \hich\af1\dbch\af12\loch\f1 WeekdayMap is a bitfield: 
\par 
\par }{\rtlch\fcs1 \ai\af1\afs20 \ltrch\fcs0 \i\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 Bit7    Bit6 Bit5 Bit4 Bit3 Bit2 Bit1 Bit0
\par {\*\xmlopen\xmlns2{\factoidname place}}\hich\af1\dbch\af12\loch\f1 Holiday{\*\xmlclose} Sat  Fri  Thu  Wed  Tues Mon  Sun}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par 
\par \hich\af1\dbch\af12\loch\f1 We use the following methods to retrieve the schedule and window
\par 
\par }{\rtlch\fcs1 \ai\af1\afs20 \ltrch\fcs0 \i\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 tScheduleArgument\hich\af1\dbch\af12\loch\f1  argument = new tScheduleArgument();
\par \hich\af1\dbch\af12\loch\f1 argument.ID = requested schedule ID
\par \hich\af1\dbch\af12\loch\f1 tScheduleReturn return = host.readtSchedule(argument);}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par \hich\af1\dbch\af12\loch\f1 The tScheduleReturn will contain the schedule list with one item, out schedule. Once we have the schedule, we get the i'th wind\hich\af1\dbch\af12\loch\f1 ow.
\par 
\par \hich\af1\dbch\af12\loch\f1 To update the schedule, we update the window we extracted, and update the entire schedule:
\par 
\par }{\rtlch\fcs1 \ai\af1\afs20 \ltrch\fcs0 \i\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 tScheduleArgument argument = new tScheduleArgument();
\par \hich\af1\dbch\af12\loch\f1 argument.Data.Add(schedule);
\par \hich\af1\dbch\af12\loch\f1 argument.numberOfReturns = 1;
\par \hich\af1\dbch\af12\loch\f1 tScheduleReturn return = host.updatetSchedule(\hich\af1\dbch\af12\loch\f1 argument);}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par \hich\af1\dbch\af12\loch\f1 We do not need the results
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid3475228 \hich\af1\dbch\af12\loch\f1 1.2. boolean fields}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par \hich\af1\dbch\af12\loch\f1 Bool fields are mapped to uint32 with false/true mapped to 0/1.
\par 
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid3475228 \hich\af1\dbch\af12\loch\f1 1.3. Host, panel, and site}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par \hich\af1\dbch\af12\loch\f1 Each host instance manages one panel. The methods to manage the tPanelConfig will always work with ju\hich\af1\dbch\af12\loch\f1 
st one. The client will maintain a map of panel names to the host instance and the panel's site name.
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid3475228 \hich\af1\dbch\af12\loch\f1 1.3. Entity retrieval}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par \hich\af1\dbch\af12\loch\f1 When performing a retrieval of all entities, set the numberOfReturns field to a very large number
\par 
\par \hich\af1\dbch\af12\loch\f1 The following pattern can be used for retrieval of an entity, either by its ID or its reference. We use the example of retrieving a tAreaWithName by its ID or tArea reference
\par 
\par \hich\af1\dbch\af12\loch\f1 Pseudo C code with ID known:
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid3475228 \hich\af2\dbch\af12\loch\f2 tAreaWithNameArgument theQuery;
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid6322346 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid3475228 \hich\af2\dbch\af12\loch\f2  theReturn;
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid3475228 \hich\af2\dbch\af12\loch\f2  
\par \hich\af2\dbch\af12\loch\f2 theQ\hich\af2\dbch\af12\loch\f2 uery.numberOfReturns = 1;
\par \hich\af2\dbch\af12\loch\f2 theQuery.data.ID = knownID;
\par \hich\af2\dbch\af12\loch\f2  
\par \hich\af2\dbch\af12\loch\f2 theReturn = readtAreaWithName(theQuery);
\par \hich\af2\dbch\af12\loch\f2  
\par \hich\af2\dbch\af12\loch\f2 if (theReturn.status == STATUS_OK)
\par \{
\par \hich\af2\dbch\af12\loch\f2     printf("Area with ID %ld is called '%s'\\n", 
\par \hich\af2\dbch\af12\loch\f2         knownID, 
\par \hich\af2\dbch\af12\loch\f2         theReturn.data.Name);
\par \}}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par 
\par \hich\af1\dbch\af12\loch\f1 Pseudo C code with \hich\af1\dbch\af12\loch\f1 tArea known:
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid3475228 \hich\af2\dbch\af12\loch\f2 tAreaWithNameArgument theQuery;
\par \hich\af2\dbch\af12\loch\f2 tAreaWithNameReturn theReturn;
\par \hich\af2\dbch\af12\loch\f2  
\par \hich\af2\dbch\af12\loch\f2 theQuery.numberOfReturns = 1;
\par \hich\af2\dbch\af12\loch\f2 theQuery.data.Config = knowntArea;
\par \hich\af2\dbch\af12\loch\f2  
\par \hich\af2\dbch\af12\loch\f2 theReturn = readtAreaWithName(theQuery);
\par \hich\af2\dbch\af12\loch\f2  
\par \hich\af2\dbch\af12\loch\f2 if (theReturn.status == STATUS_OK)
\par \{
\par \hich\af2\dbch\af12\loch\f2     printf("Area with name %s is ID %ld\\n", 
\par \hich\af2\dbch\af12\loch\f2         theReturn.data.ID, 
\par \hich\af2\dbch\af12\loch\f2         theReturn.data.Name);
\par \}}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid3475228 \hich\af1\dbch\af12\loch\f1 2. BadgeReader}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par \hich\af1\dbch\af12\loch\f1 badgeReader info comes from the ReaderConfig collection in tDoor.
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 Fields:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 +Name:string\tab \tab \tab \tab \tab \tab 
\par \hich\af1\dbch\af12\loch\f1 +AccessPoint:string\tab \tab \tab \tab \hich\af1\dbch\af12\loch\f1 The name of the panel that contains the door
\par \hich\af1\dbch\af12\loch\f1 +DoorName:string\tab \tab \tab \tab The name of parent door
\par \hich\af1\dbch\af12\loch\f1 +Area:string\tab \tab \tab \tab \tab tReaderConfig.Area (Area ID)
\par \hich\af1\dbch\af12\loch\f1 +Site:string\tab \tab \tab \tab \tab The name of the site that contains the panel
\par \hich\af1\dbch\af12\loch\f1 +Defined:bool\tab \tab \tab \tab \tab tReaderConfig.Defined
\par \hich\af1\dbch\af12\loch\f1 +AntiPassBack:bool\tab \tab \tab \tab \hich\af1\dbch\af12\loch\f1 tReaderConfig.Antipassback
\par \hich\af1\dbch\af12\loch\f1 +LockoutStart:DateTime\tab \tab \tab \tab tReaderConfig.LockoutInWindow
\par \hich\af1\dbch\af12\loch\f1 +LockoutStop:DateTime\tab \tab \tab \tab tReaderConfig.LockoutInWindow
\par \hich\af1\dbch\af12\loch\f1 +CommandStation:bool\tab \tab \tab \tab tReaderConfig.CommandStation
\par \hich\af1\dbch\af12\loch\f1 +LogAPBViolationOnly:bool\tab \tab \tab tReaderConfig.LogAPBViolationOnly
\par \hich\af1\dbch\af12\loch\f1 +ReaderModeSchedule:ModeSchedule\tab \tab tReaderConfig.ReaderModeSchedule}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 +ReadModeInWindow:ReaderMode\tab \tab tReaderConfig.ReaderModeInWindow
\par \hich\af1\dbch\af12\loch\f1 +ReadModeOutWindow:ReaderMode\tab \tab tReaderConfig.ReaderModeOutWindow}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 +CardModeSchedule:ModeSchedule\tab \tab tReaderConfig.CardModeSchedul\hich\af1\dbch\af12\loch\f1 e
\par \hich\af1\dbch\af12\loch\f1 +CardModeInWindow:CardMode\tab \tab \tab tReaderConfig.CardModeInWindow 
\par \hich\af1\dbch\af12\loch\f1 +CardModeOutWindow:CardMode\tab \tab tReaderConfig.CardModeOutWindow
\par \hich\af1\dbch\af12\loch\f1 +LockoutSchedule:ModeSchedule\tab \tab tReaderConfig.LockoutSchedule
\par \hich\af1\dbch\af12\loch\f1 +IsEnablingReader:bool\tab \tab \tab \tab tReaderConfig.IsEnablingReader
\par \hich\af1\dbch\af12\loch\f1 +UnlockOnEnabl\hich\af1\dbch\af12\loch\f1 eDisable:bool\tab \tab \tab tReaderConfig.UnlockOnEnableDisable
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 methods:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 +SearchBadgeReaders(area:string,panel:string,door:string,gate:string,page:int,size:int,order:SortOrder,sortProperty:string):BadgeReaderSearchResult
\par \tab \hich\af1\dbch\af12\loch\f1 - area: the area name of a reader
\par \tab \hich\af1\dbch\af12\loch\f1 - panel: t\hich\af1\dbch\af12\loch\f1 he panel name
\par \tab \hich\af1\dbch\af12\loch\f1 - door: match to tDoorWithName.Name
\par \tab \hich\af1\dbch\af12\loch\f1 - gate: match to tDoorWithName.Name but tDoorWithName.InOutStation is true
\par 
\par \tab \hich\af1\dbch\af12\loch\f1 - If panel is provided, it will match to the host with the given name. otherwise, it will work with all hosts
\par \tab \hich\af1\dbch\af12\loch\f1 - if area is pro\hich\af1\dbch\af12\loch\f1 vided, it will try to match to the reader's area
\par \tab \hich\af1\dbch\af12\loch\f1 - if door is provided, it will search all doors for the given name
\par \tab \hich\af1\dbch\af12\loch\f1 - if gate is provided, it will search all doors for the given name that meet above condition
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \deleted\f1\fs20\insrsid3475228 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 \tab \hich\af1\dbch\af12\loch\f1 - use readtDoorwithName to get doors
\par 
\par \hich\af1\dbch\af12\loch\f1 +Save\hich\af1\dbch\af12\loch\f1 BadgeReader(reader:BadgeReader):void
\par \tab \hich\af1\dbch\af12\loch\f1 - reader to update
\par 
\par \tab \hich\af1\dbch\af12\loch\f1 - get the door of this reader, update it s 1st reader, and update the door
\par 
\par }{\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid3475228 \hich\af1\dbch\af12\loch\f1 3. Device/NetworkSetting}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par \hich\af1\dbch\af12\loch\f1 Device will simply encompass results of the Network Setting search results, and will represent the panel information
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 Fields:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 +Name:string\tab \tab \tab \tab The panel name: tPanelConfig.System.LocalPublic.SystemID
\par \hich\af1\dbch\af12\loch\f1 +AccessPoint:string\tab \tab \tab The panel name: Same as above
\par \hich\af1\dbch\af12\loch\f1 +Area:\hich\af1\dbch\af12\loch\f1 string\tab \tab \tab \tab The panel area name : tPanelConfig.Area (Query for name using the Area instance into tAreaWithName and) }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 
\b\deleted\f1\fs20\insrsid3475228 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 +Site:string\tab \tab \tab \tab Configured site name for the given panel
\par \hich\af1\dbch\af12\loch\f1 +NetworkSetting1:NetworkSetting\tab First network settings: tPanelConfig.NetworkSettings\hich\af1\dbch\af12\loch\f1 [0]
\par \hich\af1\dbch\af12\loch\f1 +NetworkSetting2:NetworkSetting\tab Alternate network settings: tPanelConfig.NetworkSettings[1]
\par 
\par \hich\af1\dbch\af12\loch\f1 Network represents a single network setting
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 Fields:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 +DHCP:bool\tab \tab \tab \tab tNetworkSettings.StaticIP
\par \hich\af1\dbch\af12\loch\f1 +IPAddress:IPAddress\tab \tab \tab tNetworkSettings.IPAddress
\par \hich\af1\dbch\af12\loch\f1 +Gateways:IList<I\hich\af1\dbch\af12\loch\f1 PAddress>\tab \tab tNetworkSettings.GatewayAddress (comma-delimited)
\par \hich\af1\dbch\af12\loch\f1 +Mask:IPAddress\tab \tab \tab tNetworkSettings.NetworkMask
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 methods:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 +SearchDevices(area:string,panel:string,page:int,size:int,order:SortOrder,sortProperty:string):DeviceSearchResult
\par \tab \hich\af1\dbch\af12\loch\f1 - area: the area name o\hich\af1\dbch\af12\loch\f1 f a panel
\par \tab \hich\af1\dbch\af12\loch\f1 - panel: the panel name
\par 
\par \tab \hich\af1\dbch\af12\loch\f1 - If panel is provided, it will match to the host with the given name. otherwise, it will work with all hosts
\par \tab \hich\af1\dbch\af12\loch\f1 - if area is provided, it will try all hosts to match to their area's name
\par 
\par \hich\af1\dbch\af12\loch\f1 +SaveNetworkSettings(panel:string,networkSetting1:NetworkSetting,networkSetting2:NetworkSetting):void
\par \tab \hich\af1\dbch\af12\loch\f1 - panel: the panel name
\par \tab \hich\af1\dbch\af12\loch\f1 - networkSetting1: the first panel name
\par \tab \hich\af1\dbch\af12\loch\f1 - networkSetting2: the second panel name
\par 
\par \tab \hich\af1\dbch\af12\loch\f1 - retrieve the tPanelConfig, update its netw\hich\af1\dbch\af12\loch\f1 ork fields, and update the tPanelConfig
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid3475228 \hich\af1\dbch\af12\loch\f1 4. Sensors
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 Fields:}{\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid3475228 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 +Type:int\tab \tab tPoint.Type\tab \tab 
\par \hich\af1\dbch\af12\loch\f1 +DoorName:string\tab tAreaWithName.Name + "Sensor"
\par \hich\af1\dbch\af12\loch\f1 +Panel:string\tab \tab The panel name where this sensor is located
\par \hich\af1\dbch\af12\loch\f1 +Area:string\tab \tab tPoint.Area (use this ID to fetch the tAreaWithNa\hich\af1\dbch\af12\loch\f1 me)
\par \hich\af1\dbch\af12\loch\f1 +BufferArea:string\tab tPoint.BufferArea (use this ID to fetch the tAreaWithName)
\par \hich\af1\dbch\af12\loch\f1 +Site:string\tab \tab The configured site of the panel
\par \hich\af1\dbch\af12\loch\f1 +Circuit:int\tab \tab tPoint.Circuit
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 methods:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 +SearchSensors(panel:string,area:string,door:string,page:int,size:int,order:SortOrder,so\hich\af1\dbch\af12\loch\f1 rtProperty:string):SensorSearchResult
\par \tab \hich\af1\dbch\af12\loch\f1 - area: the area name of the sensor
\par \tab \hich\af1\dbch\af12\loch\f1 - panel: the panel name
\par \tab \hich\af1\dbch\af12\loch\f1 - door: match the door's readers' areas to sensor's area
\par 
\par \tab \hich\af1\dbch\af12\loch\f1 - If panel is provided, it will match to the host with the given name. otherwise, it will work w\hich\af1\dbch\af12\loch\f1 ith all hosts
\par \tab \hich\af1\dbch\af12\loch\f1 - if area is provided, it will try all hosts to match to the name of the area with the given name
\par \tab \hich\af1\dbch\af12\loch\f1 - if door is provided, it will search all doors for the given name whose readers' areas have the same name as the sensor's area
\par 
\par \tab \hich\af1\dbch\af12\loch\f1 - Use tPointWithName Read method to get the sensors
\par 
\par \hich\af1\dbch\af12\loch\f1 +SaveSensor(sensor:Sensor:void):void
\par \tab \hich\af1\dbch\af12\loch\f1 - sensor: the sensor to save
\par 
\par \tab \hich\af1\dbch\af12\loch\f1 - Use tPointWithName Update method
\par 
\par }{\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid3475228 \hich\af1\dbch\af12\loch\f1 5. Access Test Card}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 Fields:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 +IdentificationNumber:string\tab tUser.ID
\par \hich\af1\dbch\af12\loch\f1 +Department:string\tab \tab (test_acces\hich\af1\dbch\af12\loch\f1 s_card.department)
\par \hich\af1\dbch\af12\loch\f1 +Photo:byte[]\tab \tab \tab (test_access_card.photo): this field should be varbinary(x)
\par \hich\af1\dbch\af12\loch\f1 +Groups:IList<string>\tab \tab (test_access_card_group.group_name)
\par \hich\af1\dbch\af12\loch\f1 +FromTime:int\tab \tab \tab tUser.StartDate
\par \hich\af1\dbch\af12\loch\f1 +ToTime:int\tab \tab \tab tUser.EndDate
\par \hich\af1\dbch\af12\loch\f1 +PIN:long\tab \tab \tab tUser.PIN
\par \hich\af1\dbch\af12\loch\f1 +DateCreated:DateTim\hich\af1\dbch\af12\loch\f1 e\tab \tab (test_access_card.date_created)
\par \hich\af1\dbch\af12\loch\f1 +Site:string\tab \tab \tab The configured site of the panel
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 methods:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 +AddTestAccessCard(card:TestAccessCard):void
\par \tab \hich\af1\dbch\af12\loch\f1 - card: the card to add
\par 
\par \tab \hich\af1\dbch\af12\loch\f1 - simply use the tUserWithName create method to create this
\par \tab 
\par \hich\af1\dbch\af12\loch\f1 +DeleteTestAccessCard(card:Te\hich\af1\dbch\af12\loch\f1 stAccessCard):void
\par \tab \hich\af1\dbch\af12\loch\f1 - card: the card to delete
\par 
\par \tab \hich\af1\dbch\af12\loch\f1 - simply use the tUserWithName delete method to delete this
\par 
\par \hich\af1\dbch\af12\loch\f1 +SearchTestAccessCards(area:string,site:string,page:int,size:int,order:SortOrder,sortProperty:string):TestAccessCardSearchResult
\par \tab \hich\af1\dbch\af12\loch\f1 - area: the area name of the access card
\par \tab \hich\af1\dbch\af12\loch\f1 - site: the site of the access card
\par 
\par \tab \hich\af1\dbch\af12\loch\f1 \hich\f1 - if area is provided, search for all cards with the given area: Must be done by searching the event log for AreaDateTime has \'93\loch\f1 \hich\f1 area\'94\loch\f1 \hich\f1  and \'93\loch\f1 \hich\f1 Extra\'94
\loch\f1  has card ID
\par \tab \hich\af1\dbch\af12\loch\f1 - if site is provi\hich\af1\dbch\af12\loch\f1 ded, search all panels for the cards
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid3475228 \hich\af1\dbch\af12\loch\f1 6. Badge}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 Fields:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 +IdentificationNumber:string\tab tUser.ID
\par \hich\af1\dbch\af12\loch\f1 +Name:string\tab \tab \tab tUser.Name
\par \hich\af1\dbch\af12\loch\f1 +AccessPoint:string\tab \tab The panel name where the card is}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 +Priority:int\tab \tab \tab tUser.PrimaryAuthority
\par \hich\af1\dbch\af12\loch\f1 +ValidationFailure:bool\tab \tab tLog.Type will be\hich\af1\dbch\af12\loch\f1  one of:
\par \hich\af1\dbch\af12\loch\f1  EVENT_LC_AXS_UNAUTHORIZED           0x1A40
\par \hich\af1\dbch\af12\loch\f1  EVENT_LC_AXS_DC_ESCORT_TIMEOUT      0x1A80
\par \hich\af1\dbch\af12\loch\f1  EVENT_LC_AXS_WRONG_TIME             0x1AC0
\par \hich\af1\dbch\af12\loch\f1  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\lang1036\langfe1042\langnp1036\insrsid3475228\charrsid14186427 \hich\af1\dbch\af12\loch\f1 EVENT_LC_AXS_INVALID_SYS_CODE       0x1B00
\par \hich\af1\dbch\af12\loch\f1  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 EVENT_LC_AXS_INVALID_PIN            0x1B40
\par \hich\af1\dbch\af12\loch\f1  EVENT_LC_AXS_APB_VIOLATION\hich\af1\dbch\af12\loch\f1           0x1B80
\par \hich\af1\dbch\af12\loch\f1  EVENT_LC_AXS_BAD_VERSION            0x1BC0
\par \hich\af1\dbch\af12\loch\f1  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\lang1036\langfe1042\langnp1036\insrsid3475228\charrsid14186427 \hich\af1\dbch\af12\loch\f1 EVENT_LC_AXS_DC_VIOLATION           0x1C00
\par \hich\af1\dbch\af12\loch\f1  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 EVENT_LC_AXS_NO_ACCESS_OFF_AUTH     0x1C40
\par \hich\af1\dbch\af12\loch\f1  EVENT_LC_AXS_NO_ACCESS_STAY_AUTH    0x1C80
\par \hich\af1\dbch\af12\loch\f1  EVENT_LC_AXS_USER_TIME_EXPIRED      0x1CC0
\par \hich\af1\dbch\af12\loch\f1  EVENT_LC_AXS_DINTERLOCK_VIOLATION   0x1D00
\par \hich\af1\dbch\af12\loch\f1  EVENT_LC_AXS_AREA_DOESNTALLOWOPEN   0x1D40
\par \hich\af1\dbch\af12\loch\f1  EVENT_LC_AXS_NO_ACCESS_ON_AUTH      0x1D80
\par \hich\af1\dbch\af12\loch\f1  EVENT_LC_AXS_INVALID_CLASS          0x1DC0
\par \hich\af1\dbch\af12\loch\f1  EVENT_LC_AXS_NO_ESCORT_AUTH         0x1E00
\par \hich\af1\dbch\af12\loch\f1  EVENT_LC_AXS_NO_INTR_OFFORSTAY_AUTH\hich\af1\dbch\af12\loch\f1  0x1E40
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 methods:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 +SearchBadges(badgeId:string,badgeHolderName:string,page:int,size:int,order:SortOrder,sortProperty:string):BadgeSearchResult
\par \tab \hich\af1\dbch\af12\loch\f1 - badgeId: maps to tUser.ID
\par \tab \hich\af1\dbch\af12\loch\f1 - badgeHolderName: maps to tUser.Name
\par 
\par \tab \hich\af1\dbch\af12\loch\f1 - search all panels for the given badges wi\hich\af1\dbch\af12\loch\f1 th tUserWithName read method
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid3475228 \hich\af1\dbch\af12\loch\f1 7. Output}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 Fields:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 +Output:string\tab \tab \tab \tab \tab tDoorWithName.Name + "Output"
\par \hich\af1\dbch\af12\loch\f1 +Area:string\tab \tab \tab \tab \tab tDoorWithName.Config.ReaderConfig[0 or 1].Area
\par \hich\af1\dbch\af12\loch\f1 +Panel:string\tab \tab \tab \tab \tab The panel where the door output is located
\par \hich\af1\dbch\af12\loch\f1 +Pod:int\tab \tab \tab \tab \tab tDoorWithName.Confi\hich\af1\dbch\af12\loch\f1 g.Pod.ID
\par \hich\af1\dbch\af12\loch\f1 +PodDoorIndex:int\tab \tab \tab \tab tDoorWithName.Config.PodDoorIndex
\par \hich\af1\dbch\af12\loch\f1 +OutputType:int\tab \tab \tab \tab \tab tDoorWithName.Config.Pod.Outputs
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 methods:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 +SearchOutputs(output:string,area:string,panel:string,page:int,size:int,order:SortOrder,sortProperty:string):OutputSearchResult
\par \tab \hich\af1\dbch\af12\loch\f1 - output: the output name}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 \tab \hich\af1\dbch\af12\loch\f1 - area: the area name
\par \tab \hich\af1\dbch\af12\loch\f1 - panel: the panel name
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid3475228 \hich\af1\dbch\af12\loch\f1 8. Door}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 Fields:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 +Name:string\tab \tab \tab \tab \tab tDoorWithName.Name.Name\tab \tab 
\par \hich\af1\dbch\af12\loch\f1 +Pod:int\tab \tab \tab \tab \tab tDoorWithName.Config.Pod.ID
\par \hich\af1\dbch\af12\loch\f1 +PodDoorIndex:int\tab \tab \tab \tab tDoorWithName.Config.PodDoorIndex
\par \hich\af1\dbch\af12\loch\f1 +ElevatorControl:bool\tab \tab \tab \tab \hich\af1\dbch\af12\loch\f1 tDoorWithName.Config.ElevatorController
\par 
\par \hich\af1\dbch\af12\loch\f1 +UnlockTimeStart:int\tab \tab \tab \tab tWindow\tab (use tDoorWithName.Config.ReaderConfig[0].ReaderModeSchedule to get the schedule with this ID then get first window. See section 1.1 for details)
\par \hich\af1\dbch\af12\loch\f1 +UnlockTimeEnd:int\tab \tab \tab \tab tWindow\tab (use t\hich\af1\dbch\af12\loch\f1 DoorWithName.Config.ReaderConfig[0].ReaderModeSchedule to get the schedule with this ID then get first window. See section 1.1 for details)

\par \hich\af1\dbch\af12\loch\f1 +UnlockTimeWeekdays:IList<int>\tab \tab tWindow\tab (use tDoorWithName.Config.ReaderConfig[0].ReaderModeSchedule to get the sche\hich\af1\dbch\af12\loch\f1 dule with this ID then get first window. See section 1.1 for details)

\par 
\par \hich\af1\dbch\af12\loch\f1 +ArmingLevel:bool\tab \tab \tab \tab tDoorWithName.Config.Arming_Level
\par \hich\af1\dbch\af12\loch\f1 +InOutStation:bool\tab \tab \tab \tab tDoorWithName.Config.InOutStation
\par \hich\af1\dbch\af12\loch\f1 +DoNotUnlockOnPanelRTE:bool\tab \tab \tab tDoorWithName.Config.DoNotUnlockOnPanelRTE
\par \hich\af1\dbch\af12\loch\f1 +\hich\af1\dbch\af12\loch\f1 LogRTE:bool\tab \tab \tab \tab \tab tDoorWithName.Config.LogRTE
\par \hich\af1\dbch\af12\loch\f1 +EntryDetection:bool\tab \tab \tab \tab tDoorWithName.Config.EntryDetection
\par \hich\af1\dbch\af12\loch\f1 +ReaderConfig1:string\tab \tab \tab \tab tDoorWithName.Name + Reader1}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\deleted\f1\fs20\insrsid3475228 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 +ReaderConfig2:string\tab \tab \tab \tab tDoorWithName.Name + Reader2 }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \deleted\f1\fs20\insrsid3475228 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 +HeldOpenProcessing:ActiveMode\tab \tab \hich\af1\dbch\af12\loch\f1 tDoorWithName.Config.HeldForcedMagConfig.HeldOpenProcessing_Tx 
\par \hich\af1\dbch\af12\loch\f1 +\hich\af1\dbch\af12\loch\f1 ForcedOpenProcessing:ActiveMode\tab \tab \hich\af1\dbch\af12\loch\f1 tDoorWithName.Config.HeldForcedMagConfig.ForcedOpenProcessing_Tx
\par \hich\af1\dbch\af12\loch\f1 +MagLockProcessing:ActiveMode\tab \tab tDoorWithName.Config.HeldForcedMagConfig.MagLockProcessing_Tx
\par \hich\af1\dbch\af12\loch\f1 +TurnStyle:bool\tab \tab \tab \tab \tab \hich\af1\dbch\af12\loch\f1 tDoorWithName.Config.HeldForcedMagConfig.TurnStyle
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid3475228 \hich\af1\dbch\af12\loch\f1 methods:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3475228 
\par \hich\af1\dbch\af12\loch\f1 SearchDoors(area:string,panel:string,door:string,gate:string,page:int,size:int,order:SortOrder,sortProperty:string):DoorSearchResult
\par \tab \hich\af1\dbch\af12\loch\f1 - area: the area name of a door. tDoor.Re\hich\af1\dbch\af12\loch\f1 aderConfig[0] and tDoor.ReaderConfig[1]. There wil be always 2
\par \tab \hich\af1\dbch\af12\loch\f1 - panel: the panel name
\par \tab \hich\af1\dbch\af12\loch\f1 - door: match to tDoorWithName.Name
\par \tab \hich\af1\dbch\af12\loch\f1 - gate: match to tDoorWithName.Name but tDoorWithName.InOutStation is true
\par 
\par \tab \hich\af1\dbch\af12\loch\f1 - If panel is provided, it will match to the host wit\hich\af1\dbch\af12\loch\f1 h the given name. otherwise, it will work with all hosts
\par \tab \hich\af1\dbch\af12\loch\f1 - if area is provided, it will search all doors for the given area. A door stradles two areas, so we check both reader configs
\par \tab \hich\af1\dbch\af12\loch\f1 - if door is provided, it will search all doors for the given name
\par \tab \hich\af1\dbch\af12\loch\f1 - \hich\af1\dbch\af12\loch\f1 if gate is provided, it will search all doors for the given name that meet above condition
\par 
\par \tab \hich\af1\dbch\af12\loch\f1 - Use readtDoorWithName to get the doors
\par 
\par \hich\af1\dbch\af12\loch\f1 +SaveDoor(door:Door):void
\par \tab \hich\af1\dbch\af12\loch\f1 - door: the door to save
\par \tab 
\par \tab \hich\af1\dbch\af12\loch\f1 - simply use the save method
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid3150652 \hich\af1\dbch\af12\loch\f1 9}{\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid3475228 \hich\af1\dbch\af12\loch\f1 . Event}{\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 
\b\f1\fs32\insrsid14186427 \hich\af1\dbch\af12\loch\f1 s (Logs)}{\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid3475228 
\par }{\rtlch\fcs1 \ab\af1\afs32 \ltrch\fcs0 \b\f1\fs32\insrsid14186427 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid14186427 {\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid3150652 \hich\af1\dbch\af12\loch\f1 9}{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid3475228 
\hich\af1\dbch\af12\loch\f1 .1 }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid14186427\charrsid10779161 \hich\af1\dbch\af12\loch\f1 Description o\hich\af1\dbch\af12\loch\f1 f Parsing Events
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14186427\charrsid14186427 
\par \hich\af1\dbch\af12\loch\f1 There is additional parsing for the API calls related to "event" functionality.
\par 
\par \hich\af1\dbch\af12\loch\f1 The events are:
\par 
\par \hich\af1\dbch\af12\loch\f1 message tLog
\par \{
\par \hich\af1\dbch\af12\loch\f1     required uint32 AreaDateTime  = 1;
\par \hich\af1\dbch\af12\loch\f1     required uint32 Type          = 2;
\par \hich\af1\dbch\af12\loch\f1     required uint32 Extra         = 3;
\par \hich\af1\dbch\af12\loch\f1     optional uint32 ID            = 4; 
\par \}
\par 
\par \hich\af1\dbch\af12\loch\f1 Event Type - Part of tLog
\par \hich\af1\dbch\af12\loch\f1 Badge ID - The user ID is part of tLog, which must be used to query the user table to get the badge ID.
\par \hich\af1\dbch\af12\loch\f1 Badge Holder name - The user ID is part of tLog, which must be used to query the us\hich\af1\dbch\af12\loch\f1 er table to get the badge ID.
\par \hich\af1\dbch\af12\loch\f1 Access Point -  The point ID is part of the extra field.
\par \hich\af1\dbch\af12\loch\f1 Door Details - The door ID is part of the extra field, when
\par \hich\af1\dbch\af12\loch\f1 Event information - These are simply strings (one per #define).
\par \hich\af1\dbch\af12\loch\f1 Event Result - Indicates whether higher prior\hich\af1\dbch\af12\loch\f1 ty events have been successfully transmitted.
\par \hich\af1\dbch\af12\loch\f1 Time of Event - AreaDateTime, as below.
\par \hich\af1\dbch\af12\loch\f1 Priority - Some events are a higher priocrity (ones with "_TX_" need to be logged AND sent to a monitoring center).
\par 
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid3475228 \hich\af1\dbch\af12\loch\f1 10.2 }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid14186427\charrsid10779161 \hich\af1\dbch\af12\loch\f1 Decoding AreaDateTime:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14186427\charrsid14186427 
\par \hich\af1\dbch\af12\loch\f1     Area = (AreaDateTime\hich\af1\dbch\af12\loch\f1  / (60 * 60 * 24 * 32 * 13) + 1) & 0xFFFF;
\par \hich\af1\dbch\af12\loch\f1     Month       = (AreaDateTime / (60 * 60 * 24 * 32)) % 13;
\par \hich\af1\dbch\af12\loch\f1     Day         = (AreaDateTime / (60 * 60 * 24)) % 32;
\par \hich\af1\dbch\af12\loch\f1     Hour        = (AreaDateTime / (60 * 60)) % 24;
\par \hich\af1\dbch\af12\loch\f1     Minute      = (AreaDateTime / 60) % 60;
\par \hich\af1\dbch\af12\loch\f1  \hich\af1\dbch\af12\loch\f1    Second      =  AreaDateTime % 60;
\par 
\par \hich\af1\dbch\af12\loch\f1 And a more formal action is:
\par 
\par \hich\af1\dbch\af12\loch\f1 AreaDateTime = (unsigned long) SysRsvd.DateTime.tm_sec +
\par \hich\af1\dbch\af12\loch\f1 (unsigned long) (SysRsvd.DateTime.tm_min * MINUTES) +
\par \hich\af1\dbch\af12\loch\f1 (unsigned long) (SysRsvd.DateTime.tm_hour * HOURS) +
\par \hich\af1\dbch\af12\loch\f1 (unsigned long) (SysRsvd\hich\af1\dbch\af12\loch\f1 .DateTime.tm_mday * DAYS) +
\par \hich\af1\dbch\af12\loch\f1 (unsigned long) ((SysRsvd.DateTime.tm_mon+1) * MONTHS) +
\par \hich\af1\dbch\af12\loch\f1 (unsigned long) (WB.Area * AREAS);
\par 
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid3475228 \hich\af1\dbch\af12\loch\f1 10.3 }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid14186427\charrsid10779161 \hich\af1\dbch\af12\loch\f1 Decoding Event Type
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14186427\charrsid14186427 \hich\af1\dbch\af12\loch\f1  
\par \hich\af1\dbch\af12\loch\f1 See attached list of event types}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14186427 \hich\af1\dbch\af12\loch\f1  below}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14186427\charrsid14186427 
\hich\af1\dbch\af12\loch\f1 .  Condo types are not required for this effort.
\par \hich\af1\dbch\af12\loch\f1  
\par \hich\af1\dbch\af12\loch\f1 Contestents will ne\hich\af1\dbch\af12\loch\f1 ed to figure out which decoding of extra goes with which event.  In most cases it should be obvious; where it's not, ask questions in the forums.
\par \hich\af1\dbch\af12\loch\f1  
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid3475228 \hich\af1\dbch\af12\loch\f1 10.4 }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid14186427\charrsid10779161 \hich\af1\dbch\af12\loch\f1 Decoding the Extra Field
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14186427\charrsid14186427 \hich\af1\dbch\af12\loch\f1  
\par \hich\af1\dbch\af12\loch\f1 Point (input) processing
\par \hich\af1\dbch\af12\loch\f1    Point Number      = Extra & 0x03FF;
\par \hich\af1\dbch\af12\loch\f1    Point Typ\hich\af1\dbch\af12\loch\f1 e  = (Extra >> 10) & 0x07;
\par 
\par \hich\af1\dbch\af12\loch\f1 Floor / Door processing:
\par \hich\af1\dbch\af12\loch\f1          Floor   = ((Extra >> 6) & 0x7F) + 1;
\par \hich\af1\dbch\af12\loch\f1          Door    = (Extra & 0x003F) + 1;
\par \hich\af1\dbch\af12\loch\f1 Output processing:
\par \hich\af1\dbch\af12\loch\f1 Output Number = (Extra & 0xFF) + 1;
\par \hich\af1\dbch\af12\loch\f1 Card numbers
\par \hich\af1\dbch\af12\loch\f1       Card Number = ((Event T\hich\af1\dbch\af12\loch\f1 YPE & 0xFF) << 16) + Extra;
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14186427 
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid3475228 \hich\af1\dbch\af12\loch\f1 10.5 }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid14186427\charrsid10779161 \hich\af1\dbch\af12\loch\f1 Listing Of Event Types
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14186427\charrsid14186427 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid14186427 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 /*---------------------------------------------------------------------------*/
\par \hich\af2\dbch\af12\loch\f2 /* Event Types                                                               */
\par \hich\af2\dbch\af12\loch\f2 /*---------------------------------------------------------------------------*/
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_PRIMARY_RESET           0x0000
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_HSC_RESET               0x0001
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_24HOUR_REPORT           0x0002
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_FAIL_2_EXIT             0x0003
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_FA\hich\af2\dbch\af12\loch\f2 IL_2_CLOSE            0x0004
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_FAIL_2_OPEN             0x0005
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_AREA_TEST_FAIL          0x0006
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_CPASS_KEY               0x0007
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_ACTIVITY                0x0008
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_ALARM                   0x0020
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_TAMPER      \hich\af2\dbch\af12\loch\f2             0x0021
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_RESTORE                 0x0022
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_POINT_TEST_FAIL         0x0023
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_VERIFY                  0x0040
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_DURESS                  0x0041
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_HOLDUP_TEST             0x0042
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_WALK_TEST             \hich\af2\dbch\af12\loch\f2   0x0043
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_CERTIFICATE_ERROR       0x0044
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_UNAUTHORIZED_OFF        0x0080
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_EMERGENCY_OFF           0x0084
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_OFF                     0x0088
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_ON                      0x008C
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_ON_BYPASSES             0x0090
\par \hich\af2\dbch\af12\loch\f2  \hich\af2\dbch\af12\loch\f2 EVENT_TX_ON_ISOLATES             0x0094
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_ON_BYPASSES_ISOLATES    0x0098
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_2ND_USER                0x009C
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_ENTRY_EXIT              0x00A0
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_ACCESS                  0x00A4
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_WORK_LATE               0x0400
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_O\hich\af2\dbch\af12\loch\f2 PEN_EARLY              0x0500
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_STAY_OPEN               0x0600
\par \hich\af2\dbch\af12\loch\f2  EVENT_TX_STAY_CLOSED             0x0700
\par \hich\af2\dbch\af12\loch\f2     /* --------------------------------------------------*/
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_UPDATE_OKAY             0x1000
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_BAD_SYSTEM_ID           0x1001
\par \hich\af2\dbch\af12\loch\f2  E\hich\af2\dbch\af12\loch\f2 VENT_LC_SYSTEM_PASSWD_FAIL      0x1002
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_CONFIG_NO_REPLY         0x1003
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_PROGRAM_LOST            0x1004
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_SPRING_FORWARD          0x1005
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_FALL_BACK               0x1006
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_SYSTEM_MESSAGE          0x1007
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_SE\hich\af2\dbch\af12\loch\f2 SSION_CODE            0x1008
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_POD_COMMS_FAIL          0x1009
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_POD_COMMS_RESTORE       0x100a
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_POD_TAMPERED            0x100b
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_TIME_LOST               0x100c
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_YEAR_CHANGE             0x100d
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_S\hich\af2\dbch\af12\loch\f2 YS_CONFIRM             0x100e
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_SYS_UNCONFIRM           0x100f
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_EXIT_PB_FAIL            0x101b
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AREA_FULL               0x101c
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AREA_NOTFULL            0x101d
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AREA_UNCONFIRMED        0x101e
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AREA_CONFIR\hich\af2\dbch\af12\loch\f2 MED          0x101f
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DOOR_HELD_OPEN          0x1020
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DOOR_RESTORE            0x1021
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DOOR_FORCED             0x1022
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DOOR_CCT_TROUBLE        0x1023
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DOOR_MAG_TROUBLE        0x1024
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_ELEV_FIRE_BYPASS     \hich\af2\dbch\af12\loch\f2    0x1025
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_ELEV_FIRE_BYPASS_RESET  0x1026
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_ELEV_BYPASS             0x1027
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_ELEV_BYPASS_RESET       0x1028
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_NOT_PROGRAMMED          0x1029
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DUPLICATE_CARD          0x102a
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_ACCESS_OVERRIDE         0x102b
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_ELEV_FLRSELECTED        0x1030
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_OUTPUT_ERROR            0x1031
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_FAP_STARTED             0x1040
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_RESTORE                 0x1041
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_ALARM                   0x1042
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_ISOLATE_POINT           0x1043
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_\hich\af2\dbch\af12\loch\f2 GUARD_TOUR              0x1044
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_CMD_POINT_TRIPPED       0x1045
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_CMD_POINT_RESET         0x1046
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_CMD_POINT_CMDFAIL       0x1047
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AREA_ARM_FAIL           0x1048
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_CANNOT_ARM_AREA         0x1049
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_TIME_CHANGE             0x1080
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_PIN_LOCKOUT             0x1081
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_WARNING_RESET           0x1082
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_SILENCE                 0x1083
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_LOBBY_ACCESS            0x1084
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_GUARD_TOUR_FAIL         0x1085
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_\hich\af2\dbch\af12\loch\f2 SYSTEM_APB_RESET        0x1086
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AREA_APB_RESET          0x1087
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_BADCARD_LOCKOUT         0x1088
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_LOCKOUT_REMOVED         0x1089
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_WARN_USERS_LEFT_INSIDE  0x108A
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_CANT_ARM_USERS_LEFT     0x108B
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_ARM_OVERRI\hich\af2\dbch\af12\loch\f2 DE            0x108C
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AREA_CONFIRM_RESET      0x108D
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_SYSTEM_CONFIRM_RESET    0x108E
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_USER_CARD_ENABLED       0x1100
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DOOR_CP_MODE            0x1140
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DOOR_C_MODE             0x1180
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DOOR_CCP_MODE       \hich\af2\dbch\af12\loch\f2     0x11C0
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DOOR_PIN_ONLY           0x1200
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DOOR_LOCKED             0x1240
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DOOR_UNLOCKED           0x1280
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DOOR_LOCKOUT            0x12C0
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DOOR_REINSTATED         0x1300
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_WAND_PATIENT_FOUND      0x1340
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_WAND_PATIENT_ALARMRESET 0x1380
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_PANIC_TOKEN             0x13C0
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_READER_NORMAL_MODE      0x1400
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_READER_DC_MODE          0x1440
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_READER_ESCORT_MODE      0x1480
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_READER_NO_CLASS         0x14C0
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC\hich\af2\dbch\af12\loch\f2 _READER_CLASS_A          0x1500
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_READER_CLASS_B          0x1540
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_READER_CLASS_AB         0x1580
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_READER_CLASS_C          0x15C0
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_READER_CLASS_AC         0x1600
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_READER_CLASS_BC         0x1640
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_READER_CL\hich\af2\dbch\af12\loch\f2 ASS_ABC        0x1680
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_MOMENTARY_UNLOCK        0x16C0
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_PENDING_FIRST_USER      0x1700
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_ELEV_SECURE             0x1740
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_ELEV_DESECURE           0x1780
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_USER_CARD_DISABLED      0x17C0
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1036\langfe1042\langnp1036\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 EVENT_LC_AXS_GRANT          \hich\af2\dbch\af12\loch\f2         0x1800
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_GRANT_ESCORT           0x1840
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_EXIT_ESCORT            0x1880
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_GRANT_MASTER           0x18C0
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_EXIT_MASTER            0x1900
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_GRANT_ENTRY            0x1940
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_GRANT_E\hich\af2\dbch\af12\loch\f2 XIT             0x1980
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_GRANT_DC               0x19C0
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 EVENT_LC_AXS_EXIT_DC                0x1A00
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_UNAUTHORIZED           0x1A40
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_DC_ESCORT_TIMEOUT      0x1A80
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_WRONG_TIME             0x1AC0
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1036\langfe1042\langnp1036\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 EVENT_LC_AXS_INVALID_SYS_CODE       0x1B00
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 EVENT_LC_AXS_INVALID_PIN            0x1B40
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_APB_VIOLATION          0x1B80
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_BAD_VERSION            0x1BC0
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1036\langfe1042\langnp1036\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 EVENT_LC_AXS_DC_VIOLATION           0x1C00
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 EVENT_LC_AXS_NO_ACCESS_OFF_AUTH     \hich\af2\dbch\af12\loch\f2 0x1C40
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_NO_ACCESS_STAY_AUTH    0x1C80
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_USER_TIME_EXPIRED      0x1CC0
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_DINTERLOCK_VIOLATION   0x1D00
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_AREA_DOESNTALLOWOPEN   0x1D40
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_NO_ACCESS_ON_AUTH      0x1D80
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_INVALID_CLASS  \hich\af2\dbch\af12\loch\f2         0x1DC0
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_NO_ESCORT_AUTH         0x1E00
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_NO_INTR_OFFORSTAY_AUTH 0x1E40
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_GRANT_BUT_NOENTRY      0x1E80
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_GRANT_PENDING          0x1EC0
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_AREA_INTERLOCKED       0x1F00
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_LOCKEDO\hich\af2\dbch\af12\loch\f2 UT              0x1F40
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_NO_FLOOR_AUTH          0x1F80
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_GRANT_ELEVATOR         0x1FC0
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_BYPASS_POINT               0x2000
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_BYPASS_ERASE               0x2400
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_MANUAL_OUTPUT_SET          0x2800
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_MAN\hich\af2\dbch\af12\loch\f2 UAL_OUTPUT_NORMAL       0x2C00
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_ELEV_FLRSECURED            0x3000
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_ELEV_FLRDESECURED          0x3080
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS2_GROUP_NOT_MATCH       0x3400
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS2_USER_NO_ACCESS        0x3440
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS2_USER_PENDING_ENROLL   0x3480
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_READER_AUTH_TOGGLE_MODE    0x34C0
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_READER_TOGGLE_MODE         0x3500
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_NOT_PROGRAMMED         0x4000
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_AXS_DUPLICATE_CARD         0x8000
\par \hich\af2\dbch\af12\loch\f2  _EVENT_LC_32NOT_PROGRAMMED          0xFFF9
\par \hich\af2\dbch\af12\loch\f2  _EVENT_LC_32DUPLICATE_CARD         \hich\af2\dbch\af12\loch\f2  0xFFFA
\par \hich\af2\dbch\af12\loch\f2  _EVENT_LC_USER_APB_RESET            0xFFFB
\par \hich\af2\dbch\af12\loch\f2  _EVENT_LC_PROGRAM_PIN               0xFFFC
\par \hich\af2\dbch\af12\loch\f2  _EVENT_LC_EDIT_USER                 0xFFFD
\par \hich\af2\dbch\af12\loch\f2  _EVENT_LC_DELETE_USER               0xFFFE
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_32NOT_PROGRAMMED        105
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_32DUPLICATE_CARD        \hich\af2\dbch\af12\loch\f2 106
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_USER_APB_RESET          107
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_PROGRAM_PIN             108   
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_EDIT_USER               109   
\par \hich\af2\dbch\af12\loch\f2  EVENT_LC_DELETE_USER             110   
\par \hich\af2\dbch\af12\loch\f2 EVENT_NO_EVENT                    0xFFFF
\par 
\par \hich\af2\dbch\af12\loch\f2 // CONDO Events. Ignore for SP14 TopCoder.
\par 
\par \hich\af2\dbch\af12\loch\f2  CEVE\hich\af2\dbch\af12\loch\f2 NT_TX_ALARM                   0x01 
\par \hich\af2\dbch\af12\loch\f2  CEVENT_TX_TAMPER                  0x02
\par \hich\af2\dbch\af12\loch\f2  CEVENT_TX_RESTORE                 0x03
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_FAP_STARTED             0x05
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_RESTORE                 0x06
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1036\langfe1042\langnp1036\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 CEVENT_LC_ALARM                   0x07
\par \hich\af2\dbch\af12\loch\f2  CEVENT_TX_DURESS                  0x21
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 CEVENT_TX_WALK_TEST               0x22
\par \hich\af2\dbch\af12\loch\f2  CEVENT_TX_SYSTEM_TEST             0x23
\par \hich\af2\dbch\af12\loch\f2  CEVENT_TX_OFF                     0x24
\par \hich\af2\dbch\af12\loch\f2  CEVENT_TX_ON                      0x25
\par \hich\af2\dbch\af12\loch\f2  CEVENT_TX_ON_BYPASSES             0x26
\par \hich\af2\dbch\af12\loch\f2  CEVENT_TX_ARM_S\hich\af2\dbch\af12\loch\f2 TAY_BYPASS         0x27
\par \hich\af2\dbch\af12\loch\f2  CEVENT_TX_ARM_STAY                0x28
\par \hich\af2\dbch\af12\loch\f2  CEVENT_TX_DISARM_STAY             0x29
\par \hich\af2\dbch\af12\loch\f2  CEVENT_TX_UNAUTHORIZED_OFF        0x28
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_AXS_GRANT               0x29
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1036\langfe1042\langnp1036\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 CEVENT_LC_AXS_GRANT_DURESS        0x2a
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_SILENCE              \hich\af2\dbch\af12\loch\f2    0x2c
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 CEVENT_LC_AXS_NO_OFF_AUTH         0x2c
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_AXS_NO_STAY_AUTH        0x2d
\par \hich\af2\dbch\af12\loch\f2  CEVENT_GRANT_LOBBY_ACCESS         0x2f
\par \hich\af2\dbch\af12\loch\f2  CEVENT_VERIFY_USER                0x30
\par \hich\af2\dbch\af12\loch\f2  CEVENT_TX_2ND_USER                0x31
\par \hich\af2\dbch\af12\loch\f2  CEVENT_PANIC_CARD                 0x32
\par \hich\af2\dbch\af12\loch\f2  CEVENT_\hich\af2\dbch\af12\loch\f2 LC_AXS_GRANT_ENTRY         0x40
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1036\langfe1042\langnp1036\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 CEVENT_LC_AXS_GRANT_EXIT          0x41
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 CEVENT_LC_AXS_UNAUTHORIZED        0x50
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_AXS_NOT_PROGRAMMED      0x51
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1036\langfe1042\langnp1036\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 CEVENT_LC_AXS_INVALID_SYS_CODE    0x52
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 CEVENT_LC_AXS_INVALID_PIN         0x53
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_AXS_BAD_CARD \hich\af2\dbch\af12\loch\f2            0x54
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_AXS_BAD_VERSION         0x55
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1036\langfe1042\langnp1036\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 CEVENT_LC_AXS_DC_VIOLATION        0x56
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_PROGRAM_LOST            0x57
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_LOCKOUT                 0x58
\par \hich\af2\dbch\af12\loch\f2  CEVENT_TX_FAIL_2_EXIT             0x62
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_BYPASS_POINT            0x70
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_BYPASS_ERASE            0x71
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_PROGRAM_PIN             0x80
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_EDIT_USER               0x81
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_DELETE_USER             0x82
\par \hich\af2\dbch\af12\loch\f2  CEVENT_LC_AXS_GRANT_DC            0x84
\par \hich\af2\dbch\af12\loch\f2  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid14186427\charrsid14186427 \hich\af2\dbch\af12\loch\f2 CEVENT_LC_AXS_DC_TIMEOUT          0x85
\par \hich\af2\dbch\af12\loch\f2  CEVENT_NO_EVENT\hich\af2\dbch\af12\loch\f2                    0xff
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14186427\charrsid14186427 
\par }}