{\rtf1\ansi\ansicpg1252\deff0\deflang1033\deflangfe1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Arial;}{\f1\froman\fprq2\fcharset0 Times New Roman;}{\f2\froman\fprq2\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;\red0\green0\blue255;}
{\stylesheet{ Normal;}{\s1 heading 1;}{\s2 heading 2;}{\s3 heading 3;}{\s4 heading 4;}}
{\*\generator Msftedit 5.41.21.2508;}\viewkind4\uc1\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\b\f0\fs24 SP-14 Door, Sensor, Network Client Service Requirements Specification\par
\f1 1.\tab\f0 Scope\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\f1\fs20 1.1\tab\f0 Overview\par
\pard\nowidctlpar\li720\sl240\slmult0\b0 SP14 - Panel Configuration Interface provides an application, which can be used to control, configure and perform status reporting of embedded access control devices.\par
\par
The embedded devices are standalone access points. Each embedded device stores its own copy of access cardholders and permission information. However the embedded devices do not have necessary horsepower to provide a user interface for displaying and managing the events.\par
\par
The client has been using a Flex based application but it has scalability related issues, which need to be overcome in the new application. Apart from scalability, the other areas that can be improved upon are access card and user management.\par
\par
The application will overcome the issues currently seen and it will provide a .NET based thick client application, which will let the companies' security and installation team configure, control and report status in real-time thus it lets the users perform the following activities from a single point.\par
\pard\nowidctlpar\fi-360\li1080\sl240\slmult0\tx1080\f2\'b7\tab\tab\f0 Installation Configuration\par
\pard\nowidctlpar\fi-360\li1080\sl240\slmult0\f2\'b7\tab\f0 Manage the embedded devices\par
\f2\'b7\tab\f0 Monitor events in real-time\par
\f2\'b7\tab\f0 Generate Reports\par
\f2\'b7\tab\f0 Control Activities\par
\pard\nowidctlpar\li720\sl240\slmult0\par
The application will provide very high performance and scalability, which are essential for the current application. Please refer to the glossary section of the System Design Specification for the terminology.\par
\par
This Client Access Library module will be responsible for the communication protocol between both the client PC and the individual SP-14 devices.\par
\par
This component will provide client that will interface with the SP-14 devices using Protocol Buffers to manage doors, sensors, and network settings.\par
\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 1.1.1\tab\f0 Version\par
\pard\nowidctlpar\li720\sl240\slmult0\i0 1.0\par
\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\b\f1 1.2\tab\f0 Logic Requirements\par
\pard\nowidctlpar\li720\sl240\slmult0\b0 This component will provide a user-friendly interface that will be used by the SP-14 Windows Application to manage the doors, sensors, and network settings. It will also provide an implementation that interfaces with those devices using Protocol Buffers. In essence, the implementation will be a thin wrapper around a .Net rendition of a generated service that will manage the communication with the devices.\par
\par
In short, this component would provide ISP14DoorSensorNetworkClient and an implementation of it.\par
\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 1.2.1\tab\f0 Protocol Buffers\par
\pard\li710\i0 This protocol is described in http://code.google.com/p/protobuf/. Designers are expected to be somewhat familiar with the protocol, but they will be working with C# code that will be generated from the client-supplied .proto files \i sp14host.proto\i0  and \i sp14basetypes.proto\i0 . For this we will use the protobuf-net tool (http://code.google.com/p/protobuf-net/ ), which generates the C# code. \par
\par
Once installed, the protobuf-net commands to generate the entities and the RPC/HTTP-based service from these .proto files are:\par
\par
\i protogen -i:sp14basetypes.proto -o:Sp14basetypes.cs\par
protogen -i:sp14host.proto -o:Sp14host.cs -p:protoRpc\par
\i0\par
A generated sample is provided with this distribution\par
\par
\pard\nowidctlpar\li720\sl240\slmult0 To generate just the entities and interface (for development compilation):\par
\i protogen -i:sp14basetypes.proto -o:Sp14basetypes.cs\par
protogen -i:sp14host.proto -o:Sp14host.cs\par
\pard\nowidctlpar\sl240\slmult0\i0\par
\pard\nowidctlpar\li720\sl240\slmult0 The resulting IHost_Application_Service must be created using Object factory. This can be done during configuration and can be cached afterwards for the duration of the client\rquote s lifetime. The use of the Disposable pattern is not necessary.\par
\pard\nowidctlpar\sl240\slmult0\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 1.2.2\tab\f0 ISP14DoorSensorNetworkClient\par
\pard\nowidctlpar\li720\sl240\slmult0\i0 The methods basically support the management of the doors, sensors, and network settings.\par
\par
The client will interface with panels via the IHost_Application_Service instance. Each panel will represent one panel. The client will need to maintain a map of panel names to their hosts (via configuration), as well as a mapping of site names to panels (via configuration), where each site will contain one or more panels. Each panel must have a site.\par
\par
When performing searches, if a panel name is specified, that panel\rquote s host will be used. Otherwise, all hosts must be checked. The mappings document will provide more info.\par
\par
When saving an entity back, the panel must be specified in the entity. To this end, each entity that needs it has a Panel/AccessPoint property. Panel and AccessPoint mean the same thing.\par
\par
\pard\keepn\nowidctlpar\s4\sb120\sa60\sl240\slmult0\f1 1.2.2.1\tab\f0 Search methods\par
\pard\nowidctlpar\li720\sl240\slmult0 The search methods are all paged. Each such method will contain a page, size, order, and sort property parameters that mean which page to get, the size of those pages, the sort order, and the name of the property by which to sort the data, respectively. \par
\par
The page parameter will be 1-based, and a value of 0 means to return all pages. Size should always be positive, but if page is 0, then size\rquote s value is not relevant. If sortProperty is null/empty, then no sorting is performed.\par
\par
\pard\keepn\nowidctlpar\s4\sb120\sa60\sl240\slmult0\f1 1.2.2.2\tab\f0 IHost_Application_Service mappings\par
\pard\nowidctlpar\li720\sl240\slmult0 The mapping of operations and entities to the IHost_Application_Service and its entities will be relatively straightforward. Additional information where ambiguities exist will be provided. Please see the mappings file, which provides the latest available information about the protocol messages and services (the generated entities and service will be equivalent to this).\par
\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 1.2.3\tab\f0 Logging\par
\pard\nowidctlpar\li720\sl240\slmult0\i0 The component will log activity and errors in the operation methods.\par
\par
We will log method entrance and exit, input and output parameters, and time each call takes at Debug level. We will log errors at Error level, and the details of the error, including the message and stack trace, must be logged.\par
\par
The designer is free to improve on this.\par
\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 1.2.4\tab\f0 Error Handling\par
\pard\nowidctlpar\li720\sl240\slmult0\i0 Each method in the ISP14Client will throw the SP14ClientException, which is defined as the top-level exception for this interface. The designer is free to extend these exceptions.\par
\par
Please note that SP14ClientException will be provided by an external component.\par
\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 1.2.5\tab\f0 Method argument handling\par
\pard\nowidctlpar\li720\sl240\slmult0\i0 This section describes the generic convention for expected handling of arguments, and may not refer to any specific operation for this component. However, any operation defined in this component that is affected by these conventions may override part or all of this. Such an override will be explicitly mentioned in the operation description above.\par
\par
\pard\nowidctlpar\fi-360\li1080\sl240\slmult0\tx1080\f2\'b7\tab\tab\f0 If getting an entity and it is not found, a method will return null.\par
\pard\nowidctlpar\fi-360\li1080\sl240\slmult0\f2\'b7\tab\f0 If getting a list of entities, and none are found, a method will return an empty list.\par
\f2\'b7\tab\f0 Any list handled by the component must not contain null elements.\par
\pard\nowidctlpar\fi-700\li1420\sl240\slmult0\f2\'b7\tab\f0 Unless stated, all input arguments will be required (non-null). String arguments must not be null/empty.\par
\pard\nowidctlpar\li720\sl240\slmult0\par
If input parameter conditions are not meet, an ArgumentNullException will be used if the argument is null, and ArgumentException (or any derivative deemed more suitable by the designer) if the argument is otherwise illegal. \par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 1.2.6\tab\f0 Configuration\par
\pard\nowidctlpar\li720\sl240\slmult0\i0 Any configuration that needs to take place can use the Configuration API coupled with the File-Based Configuration component. The client itself will be most likely used via Object factory, so the client implementation must support configuration via its constructors. The details are up to the designer.\par
\par
\pard\keepn\nowidctlpar\s2\fi-360\li360\sb120\sa60\sl240\slmult0\tx0\i\f1 1.2.7\tab\f0 Transactions\par
\pard\nowidctlpar\li720\sl240\slmult0\i0 All modifying actions must be transactional.\par
\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 1.2.8\tab\f0 Thread-safety\par
\pard\nowidctlpar\li720\sl240\slmult0\i0 The component must be effectively thread-safe. It does not have to worry about the thread-safety of the input elements or the generated service.\par
\pard\nowidctlpar\fi720\sl240\slmult0\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\b\f1 1.3\tab\f0 Required Algorithms\par
\pard\nowidctlpar\li720\sl240\slmult0\b0 The operations are expected to be as light-intensive as possible, as they will be used frequently.\par
\par
The upload of the firmware will have to be performed as smoothly as possible. The application has to smoothly process all the errors from the SP-14 devices and try to recover from them. Recover algorithm and approach is fully up to the designer. Details of the necessary operations will be provided for this competition.\par
\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\b\f1 1.4\tab\f0 Example of the Software Usage\par
\pard\nowidctlpar\li720\sl240\slmult0\b0 The front end will use this client to interface with the SP-14 panels.\par
\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\b\f1 1.5\tab\f0 Enhancement policy\par
\pard\nowidctlpar\li720\sl240\slmult0\b0 In order to eliminate superfluous, useless, and/or bloated enhancements from the application, the following policy on enhancements is in effect for this competition. \par
\par
All major enhancements must be explicitly approved by the architect. All enhancements proposed in the future direction section are considered to be approved. Only if the architect approves the enhancement may it be added to a design. Any attempt to add a major enhancement to a design without this approval will result in that enhancement to not be eligible for a score of 4 in the requirements section (unless this idea happens to correspond to another submission's enhancement that was approved). \par
\par
You may outline the enhancement proposal in the forum. You may also contact the architect directly to retain the privacy of your ideas. After the conclusion of the submission phase, the architect will notify the reviewers of the approval so they may score for it.\par
\par
Be aware that the approval of an architect does not automatically assure a 4 in the requirements section. The architect will approve an enhancement or enhancements based on how useful and pertinent they are to the application. The reviewers, though, will decide if the enhancement or sum of enhancements is substantial. It is possible that the architect may advise the reviewers of how substantial they may be to the application, but the final decision will be in the hands of the reviewers.\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\b\f1 1.6\tab\f0 Future Component Direction\par
\pard\nowidctlpar\li720\sl240\slmult0\b0 The component may be expanded to support more SP-14 functionality, but no direction is currently available.\par
\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\b\f1 2.\tab\f0\fs24 Interface Requirements\f1\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\b0\i\fs20 2.1.1\tab\f0 Graphical User Interface Requirements\par
\pard\nowidctlpar\li720\sl240\slmult0\i0 None\f1\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i 2.1.2\tab\f0 External Interfaces\par
\pard\nowidctlpar\li720\sl240\slmult0\i0 The design must adhere to outline of the Interface Class Diagram in the TCUML. Existing methods may not be changed unless explicitly approved by PM or architect in the forum or privately. The designer is free to add more methods.\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 2.1.3\tab\f0 Environment Requirements\par
\pard\nowidctlpar\fi-360\li1080\sl240\slmult0\tx1080\i0\f2\'b7\tab\f0 Development language: C# 3.5\par
\pard\nowidctlpar\fi-360\li1080\sl240\slmult0\f2\'b7\tab\f0 Compile target: C# 3.5\par
\pard\nowidctlpar\li720\sl240\slmult0\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 2.1.4\tab\f0 Package Structure\par
\pard\nowidctlpar\li720\sl240\slmult0\i0 SP14.Client\par
SP14.Client.Impl\par
\par
The \ldblquote Impl\rdblquote  namespace part is a proposed namespace part, and this can be changed by the designer.\par
\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\b\f1 3.\tab\f0\fs24 Software Requirements\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\f1\fs20 3.1\tab\f0 Administration Requirements\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\b0\i\f1 3.1.1\tab\f0 What elements of the application need to be configurable?\par
\pard\fi-360\li1080\tx1080\cf1\i0\f2\'b7\tab\f0 Host object factory key for each panel\par
\pard\fi-360\li1080\f2\'b7\tab\f0 Mapping of panel name to host\par
\f2\'b7\tab\f0 The site of each panel\par
\pard\li720    \cf0\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\b\f1 3.2\tab\f0 Technical Constraints\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\b0\i\f1 3.2.1\tab\f0 Are there particular frameworks or standards that are required?\par
\pard\i0 Protocol Buffers (http://code.google.com/p/protobuf/ )\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 3.2.2\tab\f0 TopCoder Software Component Dependencies:\f1\par
\pard\nowidctlpar\li720\sl240\slmult0\i0\f0\par
\pard\fi-360\li1080\tx1080\cf1\f2\'b7\tab\tab\f0 Logging Wrapper 3.0.1\par
\f2\'b7\tab\tab\f0 Object Factory 1.2.1\par
\f2\'b7\tab\tab\f0 Object Factory Configuration API Plugin 1.1.1\par
\pard\fi-360\li1080\f2\'b7\tab\f0 Configuration API 1.0\par
\f2\'b7\tab\f0 File-Based Configuration 2.0\par
\f2\'b7\tab\f0 Exception Manager 2.0\par
\pard\fi-360\li1080\tx1080\cf0\f2\'b7\tab\tab\f0 SP-14 Card Event Client Service 1.0\par
\f2\'b7\tab\tab\f0 SP-14 Client Entities 1.0\par
\pard\nowidctlpar\li720\sl240\slmult0\par
\pard **Please review the {\field{\*\fldinst{HYPERLINK "http://www.topcodersoftware.com/pages/c_showroom.jsp"}}{\fldrslt{\cf2\ul TopCoder Software component catalog}}}\cf0\ulnone\f0\fs20  for existing components that can be used in the design.\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 3.2.3\tab\f0 Third Party Component, Library, or Product Dependencies:\par
\pard\i0 protobuf-net (http://code.google.com/p/protobuf-net/ )\par
\pard\nowidctlpar\li720\sl240\slmult0\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 3.2.4\tab\f0 QA Environment:\par
\pard\nowidctlpar\fi-360\li1080\sl240\slmult0\tx1080\i0\f2\'b7\tab\tab\f0 .Net 3.5\par
\pard\nowidctlpar\fi-360\li1080\sl240\slmult0\f2\'b7\tab\f0 C# 3.5\par
\pard\nowidctlpar\li720\sl240\slmult0\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\b\f1 3.3\tab\f0 Design Constraints\par
\pard\nowidctlpar\li720\sl240\slmult0\b0 The component design and development solutions must adhere to the guidelines as outlined in the TopCoder Software Component Guidelines. \f1\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\b 3.4\tab\f0 Required Documentation\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\b0\i\f1 3.4.1\tab\f0 Design Documentation\par
\pard\nowidctlpar\fi-360\li1080\sl240\slmult0\tx1080\i0\f2\'b7\tab\f0 Use-Case Diagram\par
\pard\nowidctlpar\fi-360\li1080\sl240\slmult0\f2\'b7\tab\f0 Class Diagram\par
\f2\'b7\tab\f0 Sequence Diagram\par
\f2\'b7\tab\f0 Component Specification\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\i\f1 3.4.2\tab\f0 Help / User Documentation\par
\pard\nowidctlpar\fi-360\li1080\sl240\slmult0\tx1080\i0\f2\'b7\tab\f0 Design documents must clearly define intended component usage in the \lquote Documentation\rquote  tab of the TopCoder UML Tool.\par
\par
}
 