//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.10.07 at 05:25:00 AM IST 
//


package com.topcoder.alu.mock.mm7.entities;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for contentClassType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="contentClassType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="text"/>
 *     &lt;enumeration value="image-basic"/>
 *     &lt;enumeration value="image-rich"/>
 *     &lt;enumeration value="video-basic"/>
 *     &lt;enumeration value="video-rich"/>
 *     &lt;enumeration value="megapixel"/>
 *     &lt;enumeration value="content-basic"/>
 *     &lt;enumeration value="content-rich"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "contentClassType")
@XmlEnum
public enum ContentClassType {

    @XmlEnumValue("text")
    TEXT("text"),
    @XmlEnumValue("image-basic")
    IMAGE_BASIC("image-basic"),
    @XmlEnumValue("image-rich")
    IMAGE_RICH("image-rich"),
    @XmlEnumValue("video-basic")
    VIDEO_BASIC("video-basic"),
    @XmlEnumValue("video-rich")
    VIDEO_RICH("video-rich"),
    @XmlEnumValue("megapixel")
    MEGAPIXEL("megapixel"),
    @XmlEnumValue("content-basic")
    CONTENT_BASIC("content-basic"),
    @XmlEnumValue("content-rich")
    CONTENT_RICH("content-rich");
    private final String value;

    ContentClassType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ContentClassType fromValue(String v) {
        for (ContentClassType c: ContentClassType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
