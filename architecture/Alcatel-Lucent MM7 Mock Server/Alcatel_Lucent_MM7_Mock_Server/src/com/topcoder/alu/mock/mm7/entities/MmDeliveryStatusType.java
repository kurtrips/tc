//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.10.07 at 05:25:00 AM IST 
//


package com.topcoder.alu.mock.mm7.entities;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for mmDeliveryStatusType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="mmDeliveryStatusType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Expired"/>
 *     &lt;enumeration value="Retrieved"/>
 *     &lt;enumeration value="Rejected"/>
 *     &lt;enumeration value="Indeterminate"/>
 *     &lt;enumeration value="Forwarded"/>
 *     &lt;enumeration value="Unrecognised"/>
 *     &lt;enumeration value="Deferred"/>
 *     &lt;enumeration value="DeliveryConditionNotMet"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "mmDeliveryStatusType")
@XmlEnum
public enum MmDeliveryStatusType {

    @XmlEnumValue("Expired")
    EXPIRED("Expired"),
    @XmlEnumValue("Retrieved")
    RETRIEVED("Retrieved"),
    @XmlEnumValue("Rejected")
    REJECTED("Rejected"),
    @XmlEnumValue("Indeterminate")
    INDETERMINATE("Indeterminate"),
    @XmlEnumValue("Forwarded")
    FORWARDED("Forwarded"),
    @XmlEnumValue("Unrecognised")
    UNRECOGNISED("Unrecognised"),
    @XmlEnumValue("Deferred")
    DEFERRED("Deferred"),
    @XmlEnumValue("DeliveryConditionNotMet")
    DELIVERY_CONDITION_NOT_MET("DeliveryConditionNotMet");
    private final String value;

    MmDeliveryStatusType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MmDeliveryStatusType fromValue(String v) {
        for (MmDeliveryStatusType c: MmDeliveryStatusType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
