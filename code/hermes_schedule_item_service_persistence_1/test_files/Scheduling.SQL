--   ------------------------------------------- 
--   Generated by Enterprise Architect Ver. 4.01
--   Created On : Monday, 12 November, 2007 
--   DBMS       : Java 
--   ------------------------------------------- 






--  Create Tables 
CREATE TABLE activity
(
	activity_ID          RAW(16) NOT NULL,
	activity_type_ID     RAW(16) NOT NULL,
	default_start_time   DATE NOT NULL,    --  Only time field will be used. Date should be set as 2000/1/1 
	last_modified_dt     DATE NOT NULL,
	default_expire_days  NUMBER(10) NOT NULL,
	last_modified_by     VARCHAR2(50) NOT NULL,
	work_day_amt         NUMBER(10,2) NOT NULL,
	duration             NUMBER(10,2) NOT NULL,
	activity_nm          VARCHAR2(50) NOT NULL,
	enabled_ind          NUMBER(1) NOT NULL,
	activity_abbr        VARCHAR2(20),
	exclusive_ind        NUMBER(1)
)
;

COMMENT ON TABLE activity IS 'An activity is effectively a template for a schedule item, defining default values and attributes.'
;
COMMENT ON COLUMN activity.default_start_time IS 'Only time field will be used. Date should be set as 2000/1/1'
;

CREATE TABLE activity_group
(
	activity_group_ID  RAW(16) NOT NULL,
	last_modified_dt   DATE NOT NULL,
	last_modified_by   VARCHAR2(50) NOT NULL,
	act_grp_abbr       VARCHAR2(25),
	act_grp_nm         VARCHAR2(50)
)
;

COMMENT ON TABLE activity_group IS 'Groups multiple activity types together.'
;

CREATE TABLE activity_group_hist
(
	activity_group_hist_ID  RAW(16) NOT NULL,
	activity_group_ID       RAW(16) NOT NULL,
	last_modified_dt        DATE NOT NULL,
	last_modified_by        VARCHAR2(50) NOT NULL,
	act_grp_nm              VARCHAR2(50),
	change_dt               DATE,
	change_by               VARCHAR(50),
	action                  CHAR(1),
	act_grp_abbr            VARCHAR2(25)
)
;

COMMENT ON TABLE activity_group_hist IS 'Groups multiple activity types together.'
;

CREATE TABLE activity_hist
(
	activity_hist_ID     RAW(16) NOT NULL,
	activity_ID          RAW(16) NOT NULL,
	default_start_time   NUMBER(10) NOT NULL,
	default_expire_days  NUMBER(10) NOT NULL,
	last_modified_dt     DATE NOT NULL,
	work_day_amt         NUMBER(10,2) NOT NULL,
	duration             NUMBER(10,2) NOT NULL,
	last_modified_by     VARCHAR2(50) NOT NULL,
	activity_nm          VARCHAR2(50) NOT NULL,
	enabled              NUMBER(1) NOT NULL,
	activity_type_ID     RAW(16) NOT NULL,
	activity_abbr        VARCHAR2(20),
	change_by            VARCHAR(50),
	action               CHAR(1),
	change_dt            DATE,
	exclusive_ind        NUMBER(1)
)
;

COMMENT ON TABLE activity_hist IS 'An activity is effectively a template for a schedule item, defining default values and attributes.'
;

CREATE TABLE activity_type
(
	activity_type_ID    RAW(16) NOT NULL,
	activity_group_ID   RAW(16) NOT NULL,
	last_modified_dt    DATE NOT NULL,
	activity_type_nm    VARCHAR2(50) NOT NULL,
	last_modified_by    VARCHAR2(50) NOT NULL,
	activity_type_abbr  VARCHAR2(20)
)
;

COMMENT ON TABLE activity_type IS 'Defines the type of activity, such as "PTO".'
;

CREATE TABLE activity_type_hist
(
	activity_type_hist_ID  RAW(16) NOT NULL,
	activity_type_ID       RAW(16) NOT NULL,
	activity_group_ID      RAW(16) NOT NULL,
	activity_type_nm       VARCHAR2(50) NOT NULL,
	last_modified_dt       DATE NOT NULL,
	last_modified_by       VARCHAR2(50) NOT NULL,
	change_dt              DATE,
	activity_type_abbr     VARCHAR2(20),
	change_by              VARCHAR(50),
	action                 CHAR(1)
)
;

COMMENT ON TABLE activity_type_hist IS 'Defines the type of activity, such as "PTO".'
;

CREATE TABLE sched_item
(
	schedule_item_ID         RAW(16) NOT NULL,
	sched_request_status_ID  RAW(16) NOT NULL,
	sched_status_ID          RAW(16) NOT NULL,
	note_ID                  RAW(16) NOT NULL,
	sched_role_note_ID       RAW(16) NOT NULL,
	activity_ID              RAW(16) NOT NULL,
	last_modified_dt         DATE NOT NULL,
	work_day_amt             NUMBER(10,2) NOT NULL,
	last_modified_by         VARCHAR2(50) NOT NULL,
	version                  NUMBER(10,2) NOT NULL,
	duration                 NUMBER(10,2) NOT NULL,
	exception_ind            NUMBER(1),
	expire_dt                DATE,
	work_dt                  DATE
)
;

COMMENT ON TABLE sched_item IS 'Defines attributes relating to a schedule item, the base time-tracking entity.'
;

CREATE TABLE sched_item_hist
(
	sched_item_hist_ID       RAW(16) NOT NULL,
	schedule_item_ID         RAW(16) NOT NULL,
	activity_ID              RAW(16) NOT NULL,
	note_ID                  RAW(16) NOT NULL,
	sched_role_note_ID       RAW(16) NOT NULL,
	sched_request_status_ID  RAW(16) NOT NULL,
	sched_status_ID          RAW(16) NOT NULL,
	work_day_amount          NUMBER(10,2) NOT NULL,
	version                  NUMBER(10,2) NOT NULL,
	last_modified_date       DATE NOT NULL,
	duration                 NUMBER(10,2) NOT NULL,
	last_modified_by         VARCHAR2(50) NOT NULL,
	change_dt                DATE,
	expire_dt                DATE,
	change_by                VARCHAR(50),
	action                   CHAR(1),
	exception_flag           CHAR(1),
	work_dt                  DATE
)
;

COMMENT ON TABLE sched_item_hist IS 'Defines attributes relating to a schedule item, the base time-tracking entity.'
;

CREATE TABLE sched_item_pub_xref_hist
(
	sched_item_pub_xref_hist_ID  RAW(16) NOT NULL,
	sched_item_pub_xref_ID       RAW(16) NOT NULL,
	published_schedule_item_ID   RAW(16) NOT NULL,
	edit_schedule_item_ID        RAW(16) NOT NULL,
	last_modified_dt             DATE NOT NULL,
	last_modified_by             VARCHAR2(50) NOT NULL,
	change_dt                    DATE,
	change_by                    VARCHAR(50),
	action                       CHAR(1)
)
;

COMMENT ON TABLE sched_item_pub_xref_hist IS 'Ties a "parent" schedule item to the edit copy of that same schedule item. When a published schedule item is edited a copy is made, then when it is published it replaces the parent.'
;

CREATE TABLE sched_item_publish_xref
(
	sched_item_publish_xref_id  RAW(16) NOT NULL,
	published_schedule_item_ID  RAW(16) NOT NULL,
	edit_schedule_item_ID       RAW(16) NOT NULL,
	last_modified_dt            DATE NOT NULL,
	last_modified_by            VARCHAR2(50) NOT NULL
)
;

COMMENT ON TABLE sched_item_publish_xref IS 'Ties a "parent" schedule item to the edit copy of that same schedule item. When a published schedule item is edited a copy is made, then when it is published it replaces the parent.'
;

CREATE TABLE sched_request_status
(
	sched_request_status_ID  RAW(16) NOT NULL,
	last_modified_dt         DATE NOT NULL,
	last_modified_by         VARCHAR2(50) NOT NULL,
	status_desc              VARCHAR2(100),
	status_abbr              VARCHAR2(20)
)
;

COMMENT ON TABLE sched_request_status IS 'Defines the valid request statuses for a schedule item, indicating whether a schedule item has been requested, approved, etc.'
;

CREATE TABLE sched_request_status_hist
(
	sched_request_status_hist_ID  RAW(16) NOT NULL,
	sched_request_status_ID       RAW(16) NOT NULL,
	last_modified_dt              DATE NOT NULL,
	last_modified_by              VARCHAR2(50) NOT NULL,
	change_dt                     DATE,
	status_abbr                   VARCHAR2(20),
	change_by                     VARCHAR(50),
	status_desc                   VARCHAR2(100),
	action                        CHAR(1)
)
;

COMMENT ON TABLE sched_request_status_hist IS 'Defines the valid request statuses for a schedule item, indicating whether a schedule item has been requested, approved, etc.'
;

CREATE TABLE sched_status
(
	sched_status_ID   RAW(16) NOT NULL,
	last_modified_dt  DATE NOT NULL,
	last_modified_by  VARCHAR2(50) NOT NULL,
	status_abbr       VARCHAR2(20),
	status_desc       VARCHAR2(100)
)
;

COMMENT ON TABLE sched_status IS 'Defines the valid statuses for a schedule item, including whether that schedule item has been published, retired, etc.'
;

CREATE TABLE sched_status_hist
(
	sched_status_hist_ID  RAW(16) NOT NULL,
	sched_status_ID       RAW(16) NOT NULL,
	last_modified_dt      DATE NOT NULL,
	last_modified_by      VARCHAR2(50) NOT NULL,
	change_dt             DATE,
	status_abbr           VARCHAR2(20),
	change_by             VARCHAR(50),
	status_desc           VARCHAR2(100),
	action                CHAR(1)
)
;

COMMENT ON TABLE sched_status_hist IS 'Defines the valid publish statuses for a schedule item, including whether that schedule item has been published, retired, etc.'
;


;


--  Create Primary Key Constraints 
ALTER TABLE activity ADD CONSTRAINT pk_activity 
	PRIMARY KEY (activity_ID)
;

ALTER TABLE activity_group ADD CONSTRAINT PK_activity_group 
	PRIMARY KEY (activity_group_ID)
;

ALTER TABLE activity_group_hist ADD CONSTRAINT pk_activity_group_hist 
	PRIMARY KEY (activity_group_hist_ID)
;

ALTER TABLE activity_hist ADD CONSTRAINT pk_activity_hist 
	PRIMARY KEY (activity_hist_ID)
;

ALTER TABLE activity_type ADD CONSTRAINT pk_activity_type 
	PRIMARY KEY (activity_type_ID)
;

ALTER TABLE activity_type_hist ADD CONSTRAINT pk_activity_type_hist 
	PRIMARY KEY (activity_type_hist_ID)
;

ALTER TABLE sched_item ADD CONSTRAINT pk_sched_item 
	PRIMARY KEY (schedule_item_ID)
;

ALTER TABLE sched_item_hist ADD CONSTRAINT pk_basic_table_hist 
	PRIMARY KEY (sched_item_hist_ID)
;

ALTER TABLE sched_item_pub_xref_hist ADD CONSTRAINT pk_sched_item_pub_xref_hist 
	PRIMARY KEY (sched_item_pub_xref_hist_ID)
;

ALTER TABLE sched_item_publish_xref ADD CONSTRAINT pk_sched_item_publish_xref 
	PRIMARY KEY (sched_item_publish_xref_id)
;

ALTER TABLE sched_request_status ADD CONSTRAINT pk_sched_request_status 
	PRIMARY KEY (sched_request_status_ID)
;

ALTER TABLE sched_request_status_hist ADD CONSTRAINT pk_sched_request_status_hist 
	PRIMARY KEY (sched_request_status_hist_ID)
;

ALTER TABLE sched_status ADD CONSTRAINT pk_sched_status 
	PRIMARY KEY (sched_status_ID)
;

ALTER TABLE sched_status_hist ADD CONSTRAINT pk_sched_status_hist 
	PRIMARY KEY (sched_status_hist_ID)
;




--  Create Foreign Key Constraints 
ALTER TABLE activity ADD CONSTRAINT fk1_actvt 
	FOREIGN KEY (activity_type_ID) REFERENCES activity_type (activity_type_ID)
;

ALTER TABLE activity_type ADD CONSTRAINT fk1_ctvt_grp 
	FOREIGN KEY (activity_group_ID) REFERENCES activity_group (activity_group_ID)
;

ALTER TABLE sched_item ADD CONSTRAINT fk1_schd_tm 
	FOREIGN KEY (activity_ID) REFERENCES activity (activity_ID)
;

ALTER TABLE sched_item ADD CONSTRAINT fk3_schd_tm 
	FOREIGN KEY (sched_request_status_ID) REFERENCES sched_request_status (sched_request_status_ID)
;

ALTER TABLE sched_item ADD CONSTRAINT fk4_schd_tm 
	FOREIGN KEY (sched_status_ID) REFERENCES sched_status (sched_status_ID)
;

ALTER TABLE sched_item_publish_xref ADD CONSTRAINT fk2_schd_tm_pblsh_xrf 
	FOREIGN KEY (edit_schedule_item_ID) REFERENCES sched_item (schedule_item_ID)
;

ALTER TABLE sched_item_publish_xref ADD CONSTRAINT fk1_schd_tm_pblsh_xrf 
	FOREIGN KEY (published_schedule_item_ID) REFERENCES sched_item (schedule_item_ID)
;
