//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;
using System.Globalization;
using System.Collections.Generic;
using HermesNS.TC.Services.GenericNotes;
using HermesNS.TC.Services.GenericNotes.Entities;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using System.Diagnostics;

namespace HermesNS.TC.Services.ScheduleItem.Clients
{
    /// <summary>
    /// svcutil generated code
    /// </summary>
    [GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [ServiceContractAttribute]
    [HermesNS.TC.CoverageExcludeAttribute]
    public interface HermesGenericNoteService
    {
        /// <summary>
        /// svcutil generated code
        /// </summary>
        /// <param name="noteId">svcutil generated code</param>
        /// <param name="timeZone">svcutil generated code</param>
        /// <param name="userName">svcutil generated code</param>
        /// <param name="userId">svcutil generated code</param>
        /// <returns>svcutil generated code</returns>
        [OperationContractAttribute(Action = "http://tempuri.org/HermesGenericNoteService/GetGenericNote",
            ReplyAction = "http://tempuri.org/HermesGenericNoteService/GetGenericNoteResponse")]
        [ServiceKnownType("GetKnownTypes", typeof(GenericNotesServiceClient))]
        HermesGenericNote GetGenericNote(string noteId, TimeZone timeZone, string userName, string userId);

        /// <summary>
        /// svcutil generated code
        /// </summary>
        /// <param name="note">svcutil generated code</param>
        /// <param name="userName">svcutil generated code</param>
        /// <param name="userId">svcutil generated code</param>
        /// <returns>svcutil generated code</returns>
        [OperationContractAttribute(Action = "http://tempuri.org/HermesGenericNoteService/AddGenericNote",
            ReplyAction = "http://tempuri.org/HermesGenericNoteService/AddGenericNoteResponse")]
        HermesGenericNote AddGenericNote(HermesGenericNote note, string userName, string userId);

        /// <summary>
        /// svcutil generated code
        /// </summary>
        /// <param name="note">svcutil generated code</param>
        /// <param name="userName">svcutil generated code</param>
        /// <param name="userId">svcutil generated code</param>
        [OperationContractAttribute(Action = "http://tempuri.org/HermesGenericNoteService/DeleteGenericNote",
            ReplyAction = "http://tempuri.org/HermesGenericNoteService/DeleteGenericNoteResponse")]
        void DeleteGenericNote(HermesGenericNote note, string userName, string userId);

        /// <summary>
        /// svcutil generated code
        /// </summary>
        /// <param name="note">svcutil generated code</param>
        /// <param name="userName">svcutil generated code</param>
        /// <param name="userId">svcutil generated code</param>
        /// <returns>svcutil generated code</returns>
        [OperationContractAttribute(Action = "http://tempuri.org/HermesGenericNoteService/UpdateGenericNote",
            ReplyAction = "http://tempuri.org/HermesGenericNoteService/UpdateGenericNoteResponse")]
        HermesGenericNote UpdateGenericNote(HermesGenericNote note, string userName, string userId);
    }

    /// <summary>
    /// svcutil generated code
    /// </summary>
    [GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [HermesNS.TC.CoverageExcludeAttribute]
    public interface HermesGenericNoteServiceChannel : HermesGenericNoteService, IClientChannel
    {
    }

    /// <summary>
    /// svcutil generated code
    /// </summary>
    [DebuggerStepThroughAttribute()]
    [GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [HermesNS.TC.CoverageExcludeAttribute]
    public partial class GenericNotesServiceClient :
        ClientBase<HermesGenericNoteService>, HermesGenericNoteService
    {
        /// <summary>
        /// svcutil generated code
        /// </summary>
        public GenericNotesServiceClient()
        {
        }

        /// <summary>
        /// svcutil generated code
        /// </summary>
        /// <param name="endpointConfigurationName">svcutil generated code</param>
        public GenericNotesServiceClient(string endpointConfigurationName)
            :
                base(endpointConfigurationName)
        {
        }

        /// <summary>
        /// svcutil generated code
        /// </summary>
        /// <param name="endpointConfigurationName">svcutil generated code</param>
        /// <param name="remoteAddress">svcutil generated code</param>
        public GenericNotesServiceClient(string endpointConfigurationName, string remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        /// <summary>
        /// svcutil generated code
        /// </summary>
        /// <param name="endpointConfigurationName">svcutil generated code</param>
        /// <param name="remoteAddress">svcutil generated code</param>
        public GenericNotesServiceClient(string endpointConfigurationName, EndpointAddress remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        /// <summary>
        /// svcutil generated code
        /// </summary>
        /// <param name="binding">svcutil generated code</param>
        /// <param name="remoteAddress">svcutil generated code</param>
        public GenericNotesServiceClient(Binding binding, EndpointAddress remoteAddress)
            :
                base(binding, remoteAddress)
        {
        }

        /// <summary>
        /// svcutil generated code
        /// </summary>
        /// <param name="noteId">svcutil generated code</param>
        /// <param name="timeZone">svcutil generated code</param>
        /// <param name="userName">svcutil generated code</param>
        /// <param name="userId">svcutil generated code</param>
        /// <returns>svcutil generated code</returns>
        public HermesGenericNote GetGenericNote(string noteId, TimeZone timeZone, string userName, string userId)
        {
            return base.Channel.GetGenericNote(noteId, timeZone, userName, userId);
        }

        /// <summary>
        /// svcutil generated code
        /// </summary>
        /// <param name="note">svcutil generated code</param>
        /// <param name="userName">svcutil generated code</param>
        /// <param name="userId">svcutil generated code</param>
        /// <returns>svcutil generated code</returns>
        public HermesGenericNote AddGenericNote(HermesGenericNote note, string userName, string userId)
        {
            return base.Channel.AddGenericNote(note, userName, userId);
        }

        /// <summary>
        /// svcutil generated code
        /// </summary>
        /// <param name="note">svcutil generated code</param>
        /// <param name="userName">svcutil generated code</param>
        /// <param name="userId">svcutil generated code</param>
        /// <returns>svcutil generated code</returns>
        public HermesGenericNote UpdateGenericNote(HermesGenericNote note, string userName, string userId)
        {
            return base.Channel.UpdateGenericNote(note, userName, userId);
        }

        /// <summary>
        /// svcutil generated code
        /// </summary>
        /// <param name="note">svcutil generated code</param>
        /// <param name="userName">svcutil generated code</param>
        /// <param name="userId">svcutil generated code</param>
        public void DeleteGenericNote(HermesGenericNote note, string userName, string userId)
        {
            base.Channel.DeleteGenericNote(note, userName, userId);
        }

        /// <summary>
        /// <para>Gets the known types for TimeZone.</para>
        /// </summary>
        /// <param name="provider">The attribute provider.</param>
        /// <returns>The known types for TimeZone</returns>
        public static IEnumerable<Type> GetKnownTypes(ICustomAttributeProvider provider)
        {
            return new Type[] { TimeZone.CurrentTimeZone.GetType(), typeof(DaylightTime) };
        }
    }
}